system_contract:
  code_path: ./eosio.system.wasm
  abi_path: ./eosio.system.abi

bios_contract:
  code_path: ./eosio.bios.wasm
  abi_path: ./eosio.bios.abi

msig_contract:
  code_path: ./eosio.msig.wasm
  abi_path: ./eosio.msig.abi

token_contract:
  code_path: ./eosio.token.wasm
  abi_path: ./eosio.token.abi

producer:
  # Second node's account name, so it becomes an Appointed Block Producer
  my_account: eosarctic
  api_address: http://localhost:8889
  secret_p2p_address: localhost:19876
  public_p2p_endpoint: nodeos://load-balanced-edge-nodes.mybp.example.com:9876
  wallet_address: http://localhost:6667

opening_balances:
  snapshot_path: ./snapshot.csv

my_parameters:
  base_per_transaction_net_usage: 100
  base_per_transaction_cpu_usage: 500
  base_per_action_cpu_usage: 1000
  base_setcode_cpu_usage: 2097152  # 2 * 1024 * 1024 // overbilling cpu usage for setcode to cover incidental
  per_signature_cpu_usage: 100000
  per_lock_net_usage: 32
  context_free_discount_cpu_usage_num: 20
  context_free_discount_cpu_usage_den: 100
  max_transaction_cpu_usage: 10485760  # 10 * 1024 * 1024
  max_transaction_net_usage: 102400  # 100 * 1024

  max_block_cpu_usage: 104857600  # 100 * 1024 * 1024; at 500ms blocks and 20000instr trx, this enables ~10,000 TPS burst
  target_block_cpu_usage_pct: 1000  # 10%, 2 decimal places
  max_block_net_usage: 1048576
  target_block_net_usage_pct: 1000  # 10%, 2 decimal places

  max_transaction_lifetime: 3600
  max_transaction_exec_time: 0  # unused?!
  max_authority_depth: 6
  max_inline_depth: 4
  max_inline_action_size: 4096
  max_generated_transaction_count: 16

  max_storage_size: 10485760  # 10 * 1024 * 1024
  percent_of_max_inflation_rate: 10000  # percent, with 2 dec places.
  storage_reserve_ratio: 1000  # ratio * 1000

pgp:
  key_path: ./unencrypted.pgp.key

no_shuffle: true

hooks:
  init:
    exec: ./hook_init.sh
  config_ready:
    exec: ./hook_config_ready.sh
  connect_to_bios:
    exec: ./hook_connect_bios.sh
  done:
    exec: ./hook_done.sh
